- name: create an instance
  hosts: localhost
  gather_facts: no
  vars:
      gcp_project: gcp101730-pulanowskisandbox
      gcp_cred_kind: serviceaccount
      gcp_cred_file: /home/pulan/mentoring-tf-ansible/ansible/key-ansible.json
      zone: "us-central1-a"
      region: "us-central1"
      scopes:
        - https://www.googleapis.com/auth/compute

  tasks:

    - name: create a disk
      google.cloud.gcp_compute_disk:
        name: 'ansible-vm-disk-instance'
        size_gb: 50
        source_image: 'https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/debian-11-bullseye-v20220920'
        zone: us-central1-a
        zone: "{{ zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes: "{{ scopes }}"
        state: present
      register: disk

    - name: create a network
      google.cloud.gcp_compute_network:
        name: default #need to be default for firewall sake
        auto_create_subnetworks: 'true'
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes: "{{ scopes }}"
        state: present
      register: network

    - name: create a address
      google.cloud.gcp_compute_address:
        name: 'ansible-machine-address'
        region: "{{ region }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes: "{{ scopes }}"
        state: present
      register: address

    - name: create a firewall rule 
      google.cloud.gcp_compute_firewall:
        name: ansible-jenkins-ssh
        source_ranges: '0.0.0.0/0'
        allowed:
        - ip_protocol: tcp
          ports:
          - '22'
          - '80'
          - '443'
          - '8080-8090'
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes: "{{ scopes }}"
        target_tags:
          - ansible-vm
        state: present

    - name: create an instance
      google.cloud.gcp_compute_instance:
        name: 'ansible-vm'
        machine_type: n1-standard-1
        disks:
          - auto_delete: 'true'
            boot: 'true'
            source: "{{ disk }}"
        metadata:
          startup-script-url: 'gs://ansible-startup-script-1234/install-jenkins.sh'
        labels:
           environment: test
        network_interfaces:
          - network: "{{ network }}" # or null
            access_configs:
              - name: External NAT
                nat_ip: "{{ address }}"
                type: ONE_TO_ONE_NAT
        zone: "{{ zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes: "{{ scopes }}"
        tags:
           items: ansible-vm
        state: present
      register: instance
